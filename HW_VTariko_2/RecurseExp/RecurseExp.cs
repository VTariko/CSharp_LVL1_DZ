using System;
using Helper;

namespace RecurseExp
{
	//Домашняя работа C#-1, Урок 1
	//Выполнил: Вячеслав Тарико (VTariko)
	//
	//Внимание! Решал задачи 5, 6 и 7.
	//
	//7.	a) Разработать рекурсивный метод, который выводит на экран числа от a до b;
	//		б) *Разработать рекурсивный метод, который считает сумму чисел от a до b.


	class RecurseExp
	{
		static void Main(string[] args)
		{
			RecursePrint(1, 6);             //Вывод на печать чисел от a=1 до b=6
			LogicHelper.Line();             //Проводим линию-разделитель
			int summ = RecurseSumm(1, 9);   //Считаем сумму чисел от a=1 до b=9
			Console.WriteLine(summ);        //Выводим полученную сумму на экран
			LogicHelper.Pause();            //Ожидаем ввода с клавиатуры перед завершением программы
		}

		#region Рекурсивные подсчеты между числами a и b (задача 7)

		/// <summary>
		/// Функция вывода на печать целых чисел от a до b
		/// </summary>
		/// <param name="a">Число, от которого начинаем выборку</param>
		/// <param name="b">Число, на котором выборка заканчивается</param>
		private static void RecursePrint(int a, int b)
		{
			if (a <= b)                     //Погружаемся в рекурсию  до тех пор, пока первый передаваемый аргумент не станет больше второго
			{
				Console.WriteLine(a);       //Пишем первое число из переданных в функцию
				RecursePrint(++a, b);       //Передаем в функцию аргументы: первый плюс один, и творйо без изменений
			}

		}

		/// <summary>
		/// Функция получения суммы целых чисел от a до b
		/// </summary>
		/// <param name="a">Число, от которого начинаем выборку</param>
		/// <param name="b">Число, на котором выборка заканчивается</param>
		/// <returns></returns>
		private static int RecurseSumm(int a, int b)
		{
			if (a < b)                              //Погружаемся в рекурсию  до тех пор, пока первый передаваемый аргумент не станет
				//больше или равным второму
			{
				return a + RecurseSumm(++a, b);     //Возвращаем сумму первого аргумента и результат рекурсивной функции
			}
			return b;                               //Когда первый аргумент достиг второго - возвращаем значение второго аргумента
		}

		#endregion
	}
}
